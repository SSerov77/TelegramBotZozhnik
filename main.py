import os
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

from config import TOKEN
from bot_fiels import keyboard_markup as kb

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

help_text = '–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º?' \
            '\n‚ùó–ß—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é, –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É \start' \
            '\n–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –Ω—É–∂–Ω—ã—Ö —Ç–µ–±–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤' \
            '\n‚úÖ–†–∞–∑–¥–µ–ª "–í–∞—à–µ –ø–∏—Ç–∞–Ω–∏–µ" –ø–æ–¥—Å–∫–∞–∂–µ—Ç —Ç–µ–±–µ –Ω—É–∂–Ω—ã–π —Ä–∞—Ü–∏–æ–Ω —á—Ç–æ–±—ã –ø–æ—Ö—É–¥–µ—Ç—å, –Ω–∞–±—Ä–∞—Ç—å –º–∞—Å—Å—É –∏–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –µ—ë' \
            '\n‚úÖ–†–∞–∑–¥–µ–ª "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏" –ø–æ–¥—Å–∫–∞–∂–µ—Ç —Ç–µ–±–µ –±—ã—Å—Ç—Ä—ã–µ –∏ —É–¥–æ–±–Ω—ã–µ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å' \
            '\n‚úÖ–í —Ä–∞–∑–¥–µ–ª–µ "–ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è" —Ç—ã –º–æ–∂–µ—à—å –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å —Å–≤–æ–∏ —É—Å–ø–µ—Ö–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Å–µ–±—è' \
            '\n‚úÖ–í —Ä–∞–∑–¥–µ–ª–µ "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è" —Ç—ã –º–æ–∂–µ—à—å –∑–∞–ø–∏—Å–∞—Ç—å —á—Ç–æ-—Ç–æ –∏ –±–æ—Ç —Ç–µ–±–µ —ç—Ç–æ –ø—Ä–∏—à–ª—ë—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ ,—á—Ç–æ–±—ã —Ç—ã –Ω–µ –∑–∞–±—ã–ª –æ–± —ç—Ç–æ–º' \
            '\nüîÖ–ù–∞–ø—Ä–∏–º–µ—Ä, –∫–æ–≥–¥–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω—è—Ç—å —Ç–∞–±–ª–µ—Ç–∫–∏' \
            '\n‚úÖ–í "–î—Ä—É–≥–æ–µ" —Ç—ã –Ω–∞–π–¥–µ—à—å –µ—â–µ –º–Ω–æ–≥–æ —á–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ:)'


@dp.message_handler(commands=['start'])
async def command_start(message: types.Message):
    await bot.send_message(message.from_user.id,
                           f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}, –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –Ω–∞–ø–∏—à–∏ \help',
                           reply_markup=kb.mainMenu)


@dp.message_handler(commands=['help'])
async def command_start(message: types.Message):
    await bot.send_message(message.from_user.id, help_text, reply_markup=kb.mainMenu)


@dp.message_handler()
async def message_send(message: types.Message):

    # –†–∞–∑–¥–µ–ª –¥—Ä—É–≥–æ–µ
    if message.text == '–î—Ä—É–≥–æ–µ':
        await bot.send_message(message.from_user.id, '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ "–î—Ä—É–≥–æ–µ"', reply_markup=kb.otherMenu)
    elif message.text == '–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        await bot.send_message(message.from_user.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=kb.mainMenu)

    # –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–æ–∫ –≤ —Ä–∞–∑–¥–µ–ª–µ –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ
    elif message.text == '–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ':
        await bot.send_message(message.from_user.id, '–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ', reply_markup=kb.purposeMenu)
    elif message.text == '–ü–æ–º–µ–Ω—è—Ç—å —Ü–µ–ª—å':
        await bot.send_message(message.from_user.id, '–í—ã —Ä–µ—à–∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é —Ü–µ–ª—å', reply_markup=kb.getPurposeMenu)
    elif message.text == '–ù–∞–∑–∞–¥ –≤ "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ"':
        await bot.send_message(message.from_user.id, '–í—ã –≤–µ—Ä–Ω—É—Å—å –≤ "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ"',
                               reply_markup=kb.purposeMenu)

    elif message.text == '–ü–æ–º–µ–Ω—è—Ç—å —Ü–µ–ª—å':
        await bot.send_message(message.from_user.id, '–í—ã —Ä–µ—à–∏–ª–∏ –ø–æ–º–µ–Ω—è—Ç—å —Ü–µ–ª—å',
                               reply_markup=kb.getPurposeMenu)
    # –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–æ–∫ —Ä–∞–∑–¥–µ–ª–µ –ü–æ–≥–æ–¥–∞
    elif message.text == '–ü–æ–≥–æ–¥–∞':
        await bot.send_message(message.from_user.id, '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ "–ü–æ–≥–æ–¥–∞"', reply_markup=kb.weatherMenu)
    elif message.text == '–ù–∞–∑–∞–¥ –≤ "–î—Ä—É–≥–æ–µ"':
        await bot.send_message(message.from_user.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ "–î—Ä—É–≥–æ–µ"', reply_markup=kb.otherMenu)

    # –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–æ–∫ –≤ —Ä–∞–∑–¥–µ–ª–µ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    elif message.text == '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è':
        await bot.send_message(message.from_user.id, '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ "–ü–æ–≥–æ–¥–∞"', reply_markup=kb.notifyMenu)


executor.start_polling(dp, skip_updates=False)
